const { Scenes, Markup } = require('telegraf');
const pool = require('../db/db');

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ü–µ–Ω–∏
const writeDeveloperScene = new Scenes.WizardScene(
  'write_owner',

  // –ö—Ä–æ–∫ 1: –í–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É
  async (ctx) => {
    const keyboard = [
      [
        { text: '–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é' },  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏—Ö–æ–¥—É
      ]
    ];
    // –í–∏–≤–µ–¥–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É
    ctx.reply('–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–ø–∏—à—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è', {
      reply_markup: {
        keyboard: keyboard,
        one_time_keyboard: true,  // –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑–Ω–∏–∫–Ω–µ –ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É
        resize_keyboard: true     // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–º—ñ–Ω—é—î —Ä–æ–∑–º—ñ—Ä –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—ñ–¥ –µ–∫—Ä–∞–Ω
      }
    });




    // –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É
    ctx.wizard.next();
  },

  // –ö—Ä–æ–∫ 2: –û–±—Ä–æ–±–∫–∞ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É
  async (ctx) => {
    const messageToOwner = ctx.message.text.trim();
 



    // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ —Å–µ—Å—ñ—ó
    ctx.session.userData = { messageToOwner };



    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∑ —Ç—Ä—å–æ–º–∞ –∫–Ω–æ–ø–∫–∞–º–∏
// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∑ —Ç—Ä—å–æ–º–∞ –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –æ–¥–Ω–æ–º—É —Ä—è–¥–∫—É
await ctx.reply(`–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: \n\n ${ctx.session.userData.messageToOwner}`, Markup.inlineKeyboard([
  [
    Markup.button.callback('–ù–∞–¥—ñ—Å–ª–∞—Ç–∏', 'save'),
    Markup.button.callback('–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç–∏', 'restart'),

  ]
  
]));

const keyboard = [
  [
    { text: '–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é' },  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏—Ö–æ–¥—É
  ]
];
// –í–∏–≤–µ–¥–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É
ctx.reply('–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é', {
  reply_markup: {
    keyboard: keyboard,
    one_time_keyboard: true,  // –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑–Ω–∏–∫–Ω–µ –ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É
    resize_keyboard: true     // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–º—ñ–Ω—é—î —Ä–æ–∑–º—ñ—Ä –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—ñ–¥ –µ–∫—Ä–∞–Ω
  }
});
    // –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É
    // ctx.wizard.next();
  },



);



// –û–±—Ä–æ–±–Ω–∏–∫ callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–±–µ—Ä–µ–≥—Ç–∏"
writeDeveloperScene.action('save', async (ctx) => {
  const { messageToOwner } = ctx.session.userData;
  const tg_id = ctx.from.id
  ctx.answerCbQuery();

  if (messageToOwner  && tg_id) {
    try {
      // –í–∞—à –∫–æ–¥ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
      const result = await pool.query(
        'INSERT INTO comments_to_developer (comment, tg_id) VALUES ($1, $2) RETURNING *',
        [messageToOwner, tg_id]
      );

      // –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
      ctx.reply(`–í–∞—à –∫–æ–º–µ–Ω—Ç–∞—Ä –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—É.–û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å.`);

    } catch (err) {
      console.error('Error saving to PostgreSQL', err.stack);
      ctx.reply('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
    }
  } else {
    ctx.reply('–ü–æ–º–∏–ª–∫–∞: –≤—ñ–¥—Å—É—Ç–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è.');
  }

  // –ü–æ–∫–∏–¥–∞—î–º–æ —Å—Ü–µ–Ω—É
  const keyboard = [
    [
      { text: '‚úèÔ∏è –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä' },  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è
      { text: 'üîç –ü–æ—à—É–∫ –Ω–æ–º–µ—Ä—É' }   // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ—à—É–∫—É –Ω–æ–º–µ—Ä—É
    ],
    [
      { text: 'üíñ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç' }  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ø—Ä–æ–µ–∫—Ç—É
    ]
  ];

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é, —è–∫–∞ –±—É–¥–µ –ø—ñ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥—É
  ctx.reply('–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', {
    reply_markup: {
      keyboard: keyboard,
      one_time_keyboard: true,  // –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑–Ω–∏–∫–Ω–µ –ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É
      resize_keyboard: true     // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–º—ñ–Ω—é—î —Ä–æ–∑–º—ñ—Ä –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—ñ–¥ –µ–∫—Ä–∞–Ω
    }
  });
  ctx.scene.leave();
});

// –û–±—Ä–æ–±–Ω–∏–∫ callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ—á–∞—Ç–∏ –∑–Ω–æ–≤—É"
writeDeveloperScene.action('restart', (ctx) => {
  ctx.answerCbQuery();

  // –û—á–∏—Å—Ç–∏–º–æ –¥–∞–Ω—ñ —Å–µ—Å—ñ—ó –ø–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º –∑–∞–Ω–æ–≤–æ
  ctx.session.userData = {};  // –û—á–∏—Å—Ç–∫–∞ —Å–µ—Å—ñ—ó

  // –ó–∞–ø–∏—Ç—É—î–º–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∑–Ω–æ–≤—É
  ctx.reply('–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–ø–∏—à—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —â–µ —Ä–∞–∑:');
  
  // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –ø–µ—Ä—à–æ–≥–æ –∫—Ä–æ–∫—É —Å—Ü–µ–Ω–∏
  ctx.wizard.selectStep(1)
});

writeDeveloperScene.command('start',(ctx) =>{
  ctx.scene.leave()
  const keyboard = [
    [
      { text: '‚úèÔ∏è –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä' },  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è
      { text: 'üîç –ü–æ—à—É–∫ –Ω–æ–º–µ—Ä—É' }   // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ—à—É–∫—É –Ω–æ–º–µ—Ä—É
    ],
    [
      { text: 'üíñ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç' }  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ø—Ä–æ–µ–∫—Ç—É
    ]
  ];

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é, —è–∫–∞ –±—É–¥–µ –ø—ñ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥—É
  ctx.reply('–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', {
    reply_markup: {
      keyboard: keyboard,

      resize_keyboard: true     // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–º—ñ–Ω—é—î —Ä–æ–∑–º—ñ—Ä –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—ñ–¥ –µ–∫—Ä–∞–Ω
    }
  });
})
writeDeveloperScene.hears('–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é',(ctx) =>{
  ctx.scene.leave()
  const keyboard = [
    [
      { text: '‚úèÔ∏è –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä' },  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è
      { text: 'üîç –ü–æ—à—É–∫ –Ω–æ–º–µ—Ä—É' }   // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ—à—É–∫—É –Ω–æ–º–µ—Ä—É
    ],
    [
      { text: 'üíñ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç' }  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ø—Ä–æ–µ–∫—Ç—É
    ]
  ];

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é, —è–∫–∞ –±—É–¥–µ –ø—ñ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥—É
  ctx.reply('–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', {
    reply_markup: {
      keyboard: keyboard,

      resize_keyboard: true     // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–º—ñ–Ω—é—î —Ä–æ–∑–º—ñ—Ä –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—ñ–¥ –µ–∫—Ä–∞–Ω
    }
  });
})
module.exports = writeDeveloperScene;
