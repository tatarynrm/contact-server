const { Scenes, Markup } = require("telegraf");
const pool = require("../db/db"); // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –ø—É–ª –∑'—î–¥–Ω–∞–Ω—å
const moment = require('./../helpers/Date/momentConfig')
// –û–±'—î–∫—Ç –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
const userData = {}; // –ú–∞–ø–∞, –¥–µ –∫–ª—é—á–µ–º –±—É–¥–µ user ID, –∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º –æ–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏
const isPremiumUser = false; // –ó–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —á–∏ —î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–µ–º—ñ—É–º, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Wizard-—Å—Ü–µ–Ω–∏
const searchNumberScene = new Scenes.WizardScene(
  "search_number", // –Ü–º'—è —Å—Ü–µ–Ω–∏
  async (ctx) => {
    // –ï—Ç–∞–ø 1: –ó–∞–ø–∏—Ç—É—î–º–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –ø–æ—à—É–∫—É
    const keyboard = [
      [
        { text: '–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é' },  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏—Ö–æ–¥—É
      ]
    ];
    await ctx.reply("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ—à—É–∫—É:\n–£ —Ñ–æ—Ä–º–∞—Ç—ñ 0998887766", {
      reply_markup: {
        keyboard: keyboard,
        one_time_keyboard: true,  // –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑–Ω–∏–∫–Ω–µ –ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É
        resize_keyboard: true     // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–º—ñ–Ω—é—î —Ä–æ–∑–º—ñ—Ä –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—ñ–¥ –µ–∫—Ä–∞–Ω
      }
    });

    return ctx.wizard.next(); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –µ—Ç–∞–ø—É
  },
  async (ctx) => {
    // –ï—Ç–∞–ø 2: –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –Ω–æ–º–µ—Ä—É
    const number = ctx.message.text.trim();

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É
    const phoneRegex = /^0\d{9}$/;
    if (!phoneRegex.test(number)) {
      return ctx.reply("–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    }

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ –æ–±'—î–∫—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const userId = ctx.from.id; // –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    userData[userId] = { phoneNumber: number, page: 1 };  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–º–µ—Ä —ñ –ø–æ—á–∞—Ç–∫–æ–≤—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –¥–ª—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

    try {
      // –õ–æ–≥—ñ–∫–∞ –¥–ª—è –ø–æ—à—É–∫—É –Ω–æ–º–µ—Ä–∞ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —á–µ—Ä–µ–∑ –ø—É–ª
      const result = await pool.query(
        "SELECT * FROM phone_comments WHERE phone = $1",
        [number]
      );

      if (result.rows.length > 0) {
        await ctx.reply(`–ó–Ω–∞–π–¥–µ–Ω–æ ${result.rows.length} –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ –Ω–æ–º–µ—Ä—É "${number}"`, {
          reply_markup: {
            keyboard: [[{ text: "üëÅÔ∏è –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ" }, { text: "–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é" }]],
            resize_keyboard: true,
          },
        });
      } else {
        ctx.reply(`–¶–µ–π –Ω–æ–º–µ—Ä –ø–æ–∫–∏ —â–æ –Ω–µ –º–∞—î –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤.\n–ë—É–¥—å—Ç–µ –ø–µ—Ä—à–∏–º, —Ö—Ç–æ –ø–æ–¥—ñ–ª–∏—Ç—å—Å—è —Å–≤–æ—î—é –¥—É–º–∫–æ—é! üòä`, {
          reply_markup: {
            keyboard: [[{ text: "‚úèÔ∏è –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä" }, { text: "–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é" }]],
            resize_keyboard: true,
          },
        });
      }
    } catch (err) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:", err);
      await ctx.reply("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.");
    }

    return ctx.wizard.next(); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –µ—Ç–∞–ø—É
  },
  async (ctx) => {
    // –ï—Ç–∞–ø 3: –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
    const messageText = ctx.message.text;

    if (messageText === 'üëÅÔ∏è –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ') {
      // –û—Ç—Ä–∏–º—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∑ –æ–±'—î–∫—Ç–∞
      const userId = ctx.from.id;
      const number = userData[userId]?.phoneNumber;
      let page = userData[userId]?.page || 1;

      if (!number) {
        return ctx.reply("–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø–æ—á–∞—Ç–∫—É –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ—à—É–∫—É.");
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–µ–º—ñ—É–º
   

      // –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –∑ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é
      const pageSize = 5;  // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –Ω–∞ –æ–¥–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ

      const fetchComments = async (page) => {
        const offset = (page - 1) * pageSize;
        try {
          const result = await pool.query(
            "SELECT * FROM phone_comments WHERE phone = $1 LIMIT $2 OFFSET $3",
            [number, pageSize, offset]
          );


          const comments = result.rows.map(comment => {
            const commentDate = moment(comment.created_at).format('LLL') // –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–∞—Ç—É
            const author = isPremiumUser ? comment.comment_owner === undefined ? "Premium******" :"Roman" : "–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ Premium"; // –Ø–∫—â–æ –ø—Ä–µ–º—ñ—É–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, –ø–æ–∫–∞–∑—É—î–º–æ –∞–≤—Ç–æ—Ä–∞, —ñ–Ω–∞–∫—à–µ –∑—ñ—Ä–æ—á–∫–∏
            console.log(author);
            return `–ù–∞–ø–∏—Å–∞–Ω–æ : ${commentDate}\n\n${comment.comment}\n\n\n–ê–≤—Ç–æ—Ä: ${author}`;
          }).join("\n\n___________\n\n"); // –†–æ–∑–¥—ñ–ª—è—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –ø—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–Ω—è–º

          // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ
          await ctx.reply(comments || "–ù–µ–º–∞—î –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –¥–ª—è —Ü—å–æ–≥–æ –Ω–æ–º–µ—Ä–∞.");
          
          // –í–∏–≤–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø–æ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
          const keyboard = [
            [
              { text: "–ù–∞—Å—Ç—É–ø–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ" },
              { text: "–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é" }
            ]
          ];

          await ctx.reply("+", {
            reply_markup: {
              keyboard: keyboard,
              resize_keyboard: true,
            },
          });

          // –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
          userData[userId].page = page;
        } catch (err) {
          console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:", err);
          await ctx.reply("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤.");
        }
      };

      await fetchComments(page);  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏

    } else if (messageText === '–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é') {
      ctx.scene.leave();
      const keyboard = [
        [
          { text: '‚úèÔ∏è –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä' },
          { text: 'üîç –ü–æ—à—É–∫ –Ω–æ–º–µ—Ä—É' }
        ],
        [
          { text: 'üíñ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç' }
        ]
      ];

      await ctx.reply('–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', {
        reply_markup: {
          keyboard: keyboard,
          resize_keyboard: true
        }
      });
    }else if (messageText === '‚úèÔ∏è –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä') {
      ctx.scene.leave();
      ctx.scene.enter('add_comment')
    }

    // –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—É–ø–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ"
    if (messageText === "–ù–∞—Å—Ç—É–ø–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ") {
      // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É —ñ –∑–±—ñ–ª—å—à—É—î–º–æ —ó—ó
      const userId = ctx.from.id;
      let page = userData[userId]?.page || 1;
      page++;

      // –û—Ç—Ä–∏–º—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∑ –æ–±'—î–∫—Ç–∞
      const number = userData[userId]?.phoneNumber;

      if (!number) {
        return ctx.reply("–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø–æ—á–∞—Ç–∫—É –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ—à—É–∫—É.");
      }

      // –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
      const pageSize = 5;  // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –Ω–∞ –æ–¥–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ

      const fetchComments = async (page) => {
        const offset = (page - 1) * pageSize;
        try {
          const result = await pool.query(
            "SELECT * FROM phone_comments  WHERE phone = $1 LIMIT $2 OFFSET $3",
            [number, pageSize, offset]
          );

          const comments = result.rows.map(comment => {
            const commentDate = new Date(comment.created_at).toLocaleString(); // –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–∞—Ç—É
            const author = isPremiumUser ? comment.comment_owner === undefined ? "Premium******" :"Roman" : "–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ Premium"; // –Ø–∫—â–æ –ø—Ä–µ–º—ñ—É–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, –ø–æ–∫–∞–∑—É—î–º–æ –∞–≤—Ç–æ—Ä–∞, —ñ–Ω–∞–∫—à–µ –∑—ñ—Ä–æ—á–∫–∏

            return `${commentDate}\n–ê–≤—Ç–æ—Ä: ${author}\n\n${comment.comment}`;
          }).join("\n\n___________\n\n"); // –†–æ–∑–¥—ñ–ª—è—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –ø—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–Ω—è–º

          // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ
          await ctx.reply(comments || "–¶–µ —É—Å—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–æ —Ü—å–æ–≥–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É");
          
          // –í–∏–≤–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø–æ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
          const keyboard = [
            [
              { text: "–ù–∞—Å—Ç—É–ø–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ" },
              { text: "–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é" }
            ]
          ];

          await ctx.reply(`${result.rows.length <= 0 ? 'üòí' : 'üòä'}`, {
            reply_markup: {
              keyboard: keyboard,
              resize_keyboard: true,
            },
          });

          // –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
          userData[userId].page = page;
        } catch (err) {
          console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:", err);
          await ctx.reply("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤.");
        }
      };

      await fetchComments(page);  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ

    }
  }
);

searchNumberScene.command('start',async (ctx) =>{
  ctx.scene.leave()
  const keyboard = [
    [
      { text: '‚úèÔ∏è –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä' },  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è
      { text: 'üîç –ü–æ—à—É–∫ –Ω–æ–º–µ—Ä—É' }   // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ—à—É–∫—É –Ω–æ–º–µ—Ä—É
    ],
    [
      { text: 'üíñ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç' }  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ø—Ä–æ–µ–∫—Ç—É
    ]
  ];

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é, —è–∫–∞ –±—É–¥–µ –ø—ñ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥—É
  ctx.reply('–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', {
    reply_markup: {
      keyboard: keyboard,

      resize_keyboard: true     // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–º—ñ–Ω—é—î —Ä–æ–∑–º—ñ—Ä –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—ñ–¥ –µ–∫—Ä–∞–Ω
    }
  });
})
searchNumberScene.hears('–í–∏–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é',async (ctx) =>{
  ctx.scene.leave() 
  const keyboard = [
    [
      { text: '‚úèÔ∏è –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä' },  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è
      { text: 'üîç –ü–æ—à—É–∫ –Ω–æ–º–µ—Ä—É' }   // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ—à—É–∫—É –Ω–æ–º–µ—Ä—É
    ],
    [
      { text: 'üíñ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç' }  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ø—Ä–æ–µ–∫—Ç—É
    ]
  ];

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é, —è–∫–∞ –±—É–¥–µ –ø—ñ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥—É
  ctx.reply('–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', {
    reply_markup: {
      keyboard: keyboard,

      resize_keyboard: true     // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–º—ñ–Ω—é—î —Ä–æ–∑–º—ñ—Ä –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –ø—ñ–¥ –µ–∫—Ä–∞–Ω
    }
  });
})
module.exports = searchNumberScene;
